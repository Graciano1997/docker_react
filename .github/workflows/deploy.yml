name: Deploy Docker to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION_KEY }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION_KEY }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_KEY }}.amazonaws.com

      # Step 4: Build Docker image.
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_NAME }} -f Dockerfile.dev . 

      # # Step 5: Tag Docker image
      # - name: Tag Docker image
      #   run: |
      #     docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_KEY }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # Step 6: Push Docker image to Amazon ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION_KEY }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      # Step 7: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          pip install awsebcli
          eb init -p docker ${{ secrets.EB_APPLICATION_NAME }} --region ${{ secrets.AWS_REGION_KEY }}
          eb use ${{ secrets.EB_ENVIRONMENT_NAME }}
          eb deploy
